LightWAVE to-do list		Last revised: 19 Dec 2012 (0.12)
__________________________________________________________________

Client to-do:

Most of these items are features that can be implemented in lightwave.js:

- tabbed interface
- checkboxes for annotators, allow selection/display of multiple annotators
- toggle signal and annotator checkboxes
- drag-and-drop/highlight signals, annotators
- "levels" popup as in WAVE
- detect small screen (e.g. smart phone) and switch to alternate UI
- alternate UI for smart phones, etc.
- read and keep entire annotation file(s)
- search for annotations (sequences of annotations?)
- caching
- scrolling - Google maps style
- zooming (time/amplitude/both) - animated using SMIL or jQuery animation?
- user-adjustable filtering for visual noise reduction
- display metadata ('info' request)
- include segments in info and generate clickable record maps as in ATM
- persistent annotations (rhythms, signal quality, ...)
 - use tracks (color bars or patterned lines) to indicate major types
   of persistent annotations
 - if a persistent annotated characteristic begins before/ends after the
   display window, indicate it with a marker in the left/right margin
- annotation editing
 - should be usable on touchscreens (iPad) as well as with mouse
   or trackball and normal screen
 - pull-out or pop-up annotation palette
   - most recently-used/favorite annotations near top
   - selecting type from palette modifies cursor
   - palette should include deletion tool (restore if applied again)
 - "snap" mode to move new annotations to local extremum automatically
   - use gestures to move to nearest following/preceding local max/min
     or inflection point
   - adjustable filtering to make this feature usable even in presence
     of mains or HT noise
 - enter custom annotations as NOTE + text
   - creates entry in NOTE sub-palette
   - provide a method for promoting selected NOTE texts to first-class
     annotation types
   - users should be able to save their NOTE sub-palettes (by default)
     for use with future records (even with other projects)
   - saved sub-palettes should not be readily sharable (to encourage
     promotion of useful texts to first-class annotations instead)
 - entry of persistent annotations marks onset, subtype (with predefined
     but extensible choices)
   - next annot of same type, different subtype marks end in display
   - continuation markers at right edge should be draggable into the
     display, but the user should be prompted to enter new subtype
   - need "unknown"/"unclassified" subtype
 - client-side event detector?
- bookmarking to save state
- data importer (interface to uploader/reformatter)
- data exporter (text, CSV, EDF, MATLAB, WFDB, others?)
- calipers/dividers (set of draggable markers that are kept equidistant,
  for measuring time intervals and observing periodicity/prematurity)
- nonlinear display?  scrollable "perspective" display with time-compressed
  data at left and right edges of the signal window -- via SVG transform?

__________________________________________________________________

Tests of browser and platform compatibility:

The LightWAVE client runs in a web browser and does not require
any platform-specific components.  The browser must be JavaScript-
enabled, and it must support HTML5 and (for graphical output only)
SVG.  I'd appreciate success/failure reports to fill in and expand
this table and/or to confirm the entries that are already in it.

	    Android	IOS      Linux	  Mac OS X	Windows

Android	    no SVG	n/a      n/a	  n/a 	 	n/a

Chrome	    no SVG	?      	 works	  works		works

Firefox	    works	n/a    	 works	  works		works

MSIE 7 & 8  n/a	      	n/a	 n/a	  n/a		no SVG

MSIE 9 	    n/a	      	n/a	 n/a	  n/a		works

Opera	    works      	?	 works	  works		works

Safari	    n/a	      	works	 n/a	  works		works
__________________________________________________________________

Server to-do:

These tasks will be implemented in lightwave.c.  Tasks noted
with (*) will require coordinated client-side changes.

* handler for receiving and storing annotations from clients
  - save in user's personal PNW workspace, with mechanism for submitting
    to curator/project owner when ready
- authenticated access to PhysioNetWorks data
- test web server/platform compatibility
- investigate repackaging as an Apache module or as a FastCGI app
- would server-side caching help?
- task dispatcher (e.g., accept requests to run a QRS detector and load
  its annotations)
__________________________________________________________________

Documentation to-do:

Tutorial
Simple installation for off-line use
Client customization guide
__________________________________________________________________

Other:

- Consider producing highly compressed (turning-point compressed, or
  simply undersampled?) versions of all records for viewing as quick
  overviews of entire records or lengthy excerpts of them
- Test Apache mod_filter/mod_deflate on PhysioNet servers
- Integrate LightWAVE with PhysioBank ATM, PhysioBank Record Search,
  and PhysioNetWorks
